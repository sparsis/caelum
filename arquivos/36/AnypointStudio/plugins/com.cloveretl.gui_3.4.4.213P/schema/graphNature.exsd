<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.cloveretl.gui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.cloveretl.gui" id="graphNature" name="graphNature"/>
      </appInfo>
      <documentation>
         Extension point for registration of Clover graph natures.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="nature"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="nature">
      <annotation>
         <documentation>
            Registers Clover graph nature. This has only one simple reason (currently at least) and that is to allow custom definition of visibility of components in palette the graph editor according to the graph nature associated with a graph.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="1">
            <element ref="graphEditor"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  ID of the graph nature (i.e. the actual string identifying the nature in the graph XML).
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  Human readable nature name/label which can be used in the GUI.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="graphEditor">
      <annotation>
         <documentation>
            Configuration of graph editor associated with parent element graph nature.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="graphPageLabel" type="string">
            <annotation>
               <documentation>
                  Label of the graph editor page (tab).
               </documentation>
            </annotation>
         </attribute>
         <attribute name="graphPageIcon" type="string">
            <annotation>
               <documentation>
                  Path to an icon of the graph editor page (tab).
               </documentation>
            </annotation>
         </attribute>
         <attribute name="backgroundColor" type="string">
            <annotation>
               <documentation>
                  Hex RGB color (must match [0-9A-F]{6} regex). Default is FFFFFF, e.g. white color.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="preferredPerspective" type="string">
            <annotation>
               <documentation>
                  Preferred perspective ID. When the user activates the graph editor with input graph with this nature, he/she will be asked whether to switch to this perspective (answer persistable in preferences).
               </documentation>
            </annotation>
         </attribute>
         <attribute name="paletteCategoriesOnTop" type="string">
            <annotation>
               <documentation>
                  Comma separated list of component categories which should appear on top of the graph editor palette.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="trackableFieldsEditable" type="boolean">
            <annotation>
               <documentation>
                  Enables/disabled metadata editor feature which enables the user to mark subset of metadata fields as so called &quot;trackable&quot; fields.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.3.M?
      </documentation>
   </annotation>





</schema>
